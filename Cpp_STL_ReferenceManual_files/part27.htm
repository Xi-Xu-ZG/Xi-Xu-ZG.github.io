<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>C++ Multisets</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part26.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part28.htm">Next &gt;</a></p><h2 style="padding-top: 4pt;padding-left: 173pt;text-indent: 0pt;text-align: left;"><a name="bookmark200">C++ Multisets</a></h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">C++ Multisets are like sets, in that they are associative containers containing a sorted set of objects, but differ in that they allow duplicate objects.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:6.125pt" cellspacing="0"><tr style="height:30pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Container constructors &amp; destructors</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 7pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">default methods to allocate, copy, and deallocate multisets</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">Container operators</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">assign and compare multisets</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">begin</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns an iterator to the beginning of the multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">clear</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">removes all elements from the multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">count</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns the number of elements matching a certain key</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">empty</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">true if the multiset has no elements</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">end</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns an iterator just past the last element of a multiset</p></td></tr><tr style="height:31pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">equal_range</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns iterators to the first and just past the last elements matching a specific key</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">erase</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">removes elements from a multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">find</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns an iterator to specific elements</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">insert</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">inserts items into a multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">key_comp</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns the function that compares keys</p></td></tr><tr style="height:31pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">lower_bound</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns an iterator to the first element greater than or equal to a certain value</p></td></tr><tr style="height:31pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">max_size</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns the maximum number of elements that the multiset can hold</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">rbegin</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns a reverse_iterator to the end of the multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">rend</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns a reverse_iterator to the beginning of the multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">size</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns the number of items in the multiset</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">swap</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">swap the contents of this multiset with another</p></td></tr><tr style="height:31pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-top: 7pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">upper_bound</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">returns an iterator to the first element greater than a certain value</p></td></tr><tr style="height:17pt"><td style="width:136pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s4" style="padding-left: 1pt;text-indent: 0pt;text-align: left;">value_comp</p></td><td style="width:296pt;border-top-style:solid;border-top-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s4" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">returns the function that compares values</p></td></tr></table><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part28.htm">Container constructors &amp; destructors</a><a class="toc0" href="part29.htm">Container operators</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part26.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part28.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
