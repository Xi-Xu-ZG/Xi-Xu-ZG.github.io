<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Container operators</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part10.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part12.htm">Next &gt;</a></p><h3 style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark104">Container operators</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Syntax:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 11pt;text-align: left;">#include &lt;deque&gt;</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 11pt;text-align: left;">TYPE&amp; operator[]( <b>size_type </b>index );</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">const TYPE&amp; operator[]( <b>size_type </b>index ) const; container operator=(const container&amp; c2);</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 93%;text-align: left;">bool operator==(const container&amp; c1, const container&amp; c2); bool operator!=(const container&amp; c1, const container&amp; c2); bool operator&lt;(const container&amp; c1, const container&amp; c2); bool operator&gt;(const container&amp; c1, const container&amp; c2); bool operator&lt;=(const container&amp; c1, const container&amp; c2); bool operator&gt;=(const container&amp; c1, const container&amp; c2);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">All of the C++ containers can be compared and assigned with the standard comparison operators: ==, !=, &lt;=, &gt;=, &lt;, &gt;, and =. Individual elements of a dequeue can be examined with the [] operator.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Performing a comparison or assigning one dequeue to another takes linear time. The [] operator runs in constant time.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Two `containers` are equal if:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 27pt;text-indent: 0pt;line-height: 14pt;text-align: left;">1. Their size is the same, and</p><p style="padding-left: 41pt;text-indent: -14pt;text-align: left;">2. Each member in location i in one dequeue is equal to the the member in location i in the other dequeue.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Comparisons among dequeues are done lexicographically.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">For example, the following code uses the [] operator to access all of the elements of a vector:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">vector&lt;int&gt; v( 5, 1 );</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for( int i = 0; i &lt; v.size(); i++ ) {</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 10pt;text-align: left;">cout &lt;&lt; &quot;Element &quot; &lt;&lt; i &lt;&lt; &quot; is &quot; &lt;&lt; v[i] &lt;&lt; endl;</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Related topics: at</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="564" height="1" alt="image" src="Image_093.png"/></span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part10.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part12.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
