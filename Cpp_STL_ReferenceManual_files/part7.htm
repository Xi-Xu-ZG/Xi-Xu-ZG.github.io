<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Vector constructors</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><h3 style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a name="bookmark80">Vector constructors</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Syntax:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 93%;text-align: left;">#include &lt;vector&gt; vector();</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 11pt;text-align: left;">vector( const vector&amp; c );</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">vector( <b>size_type </b>num, const TYPE&amp; val = TYPE() ); vector( input_iterator start, input_iterator end );</p><p class="s2" style="padding-left: 18pt;text-indent: 0pt;line-height: 11pt;text-align: left;">~vector();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">The default vector constructor takes no arguments, creates a new instance of that vector.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">The second constructor is a default copy constructor that can be used to create a new vector that is a copy of the given vector <i>c</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">The third constructor creates a vector with space for <i>num </i>objects. If <i>val </i>is specified, each of those objects will be given that value. For example, the following code creates a vector consisting of five copies of the integer 42:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">vector&lt;int&gt; v1( 5, 42 );</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">The last constructor creates a vector that is initialized to contain the elements between</p><p class="s11" style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">start <span class="p">and </span>end<span class="p">. For example:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 93%;text-align: left;">// create a vector of random integers cout &lt;&lt; &quot;original vector: &quot;; vector&lt;int&gt; v;</p><p class="s2" style="padding-left: 24pt;text-indent: -12pt;line-height: 93%;text-align: left;">for( int i = 0; i &lt; 10; i++ ) { int num = (int) rand() % 10; cout &lt;&lt; num &lt;&lt; &quot; &quot;; v.push_back( num );</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">cout &lt;&lt; endl;</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 93%;text-align: left;">// find the first element of v that is even vector&lt;int&gt;::iterator iter1 = v.begin(); while( iter1 != v.end() &amp;&amp; *iter1 % 2 != 0 ) {</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 10pt;text-align: left;">iter1++;</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 94%;text-align: left;">// find the last element of v that is even vector&lt;int&gt;::iterator iter2 = v.end();</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">do {</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;">iter2--;</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">} while( iter2 != v.begin() &amp;&amp; *iter2 % 2 != 0 );</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">// only proceed if we find both numbers</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">if( iter1 != v.end() &amp;&amp; iter2 != v.begin() ) {</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;">cout &lt;&lt; &quot;first even number: &quot; &lt;&lt; *iter1 &lt;&lt; &quot;, last even number: &quot; &lt;&lt;</p><p class="s2" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;">*iter2 &lt;&lt; endl;</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 93%;text-align: left;">cout &lt;&lt; &quot;new vector: &quot;; vector&lt;int&gt; v2( iter1, iter2 );</p><p class="s2" style="padding-left: 36pt;text-indent: -12pt;line-height: 93%;text-align: left;">for( int i = 0; i &lt; v2.size(); i++ ) { cout &lt;&lt; v2[i] &lt;&lt; &quot; &quot;;</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s2" style="padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;">cout &lt;&lt; endl;</p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">When run, this code displays the following output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 12pt;text-indent: 0pt;line-height: 93%;text-align: left;">original vector: 1 9 7 9 2 7 2 1 9 8 first even number: 2, last even number: 8 new vector: 2 7 2 1 9</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 200%;text-align: left;">All of these constructors run in linear time except the first, which runs in constant time. The default destructor is called when the vector should be destroyed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="576" height="1" alt="image" src="Image_070.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part6.htm">&lt; Previous</a><span> | </span><a href="../Cpp_STL_ReferenceManual.html">Contents</a><span> | </span><a href="part8.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
